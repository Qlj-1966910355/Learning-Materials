Redis
	
	-> NoSql概述
		背景<mysql演变>
			本质：解决读与写的效率问题。
				单机版MySql中的问题：
						// 数据量太大，单机就放不下
						// 数据的索引，单机内存放不下
						// 访问量(读写混合)，单机承受不住

				衍生出‘memcached(缓存)+mysql+垂直拆分’：
						<服务器垂直拆分<读写分离>，将写入内容同步到其他服务器>
						// 网站大部分情况下都是去访问读取数据，每次都需要与数据库交互查询，影响效率，数据压力较大
				
					解决：在访问中间添加一个缓存，数据缓存之后，提升效率
				
				缓存演变：
						优化数据库结构与索引 ---> 文件缓存(io操作) ---> memcacahed
					
				分库分表+水平拆分+mysql集群
						// 将几个单机组合成一组作战单元，这个作战单元有主从之分，而这个作战单元就是一个节点(小集群)，多个节点组成一个大的项目集群。
							<节点也可以是一个单机，只是这个节点很小而已，每个节点的任务可能不同>
				
		为什么要使用NoSql？
			在应用使用时会出现，用户的个人信息、社交网络、地理位置产生大量用户日志等数据，这种爆发式增长需要使用NoSql数据库。
			同时，由于关系型数据库面对大数据时，其扩展性、高昂的表变更成本、高并发容量、写入延迟等方面有限。
			
		什么是NoSql？
				<not only sql 不仅仅是sql，泛指非关系型数据库>

		NoSql特点：
			// 方便扩展<数据之间没有强关系，很好扩展>
			// 大数据量高性能<Redis一秒8万次，读取11万。NoSql的缓存记录级，是一种细粒度的存储，性能很高>
			// 数据类型是多样型的<不需要事先设计数据库，随取随用>
		
		传统RDBMS<关系型>与NoSql区别；
			关系型：
				结构化组织、sql、数据和关系都存储在单独的表中、数据操纵与定义语言、严格一致性、基础的事务、...
			NoSql：
				不仅仅是数据、没有固定的查询语言、键值对存储，列存储，文档存储，图形数据库、最终一致性、CAP定理和BASE、高性能，高可用，高扩展
		
		大数据时代的 3V+3高：
			3V：<主要是描述问题的>
				海量(Volume)、多样(Variety)<数据类型众多>、实时(Velocity)
			3高：<主要是对程序的要求>
				高并发、高可扩(随时水平拆分)、高性能
		
		
		NoSql四大数据类型分类
			1、key-value键值对
				应用场景：内容缓存，主要用于处理大量的高访问负载，也用于一些日志系统等等。
				优点：查询速度快
				缺点：数据无结构化，通常只被当做字符串或者二进制数据。
					
			2、文档型数据<bson格式(与json一样)>
				数据模型：key-value键值对，value是结构化数据
				举例：
					-> MongoDB
						MongoDB是一个基于分布式文件存储的数据库，C++编写，用来处理大量的文档。
						它是介于关系型数据库和非关系型数据库的中间产品。且是非关系型数据库中功能最丰富的，最像关系型数据库的。
					-> ConthDB
				应用场景：Web应用(与键值对类似，value是结构化的，不同的是数据库能够了解value的内容)
				优点：数据结构要求不严格，表结构可变，不需要像关系型数据库一样预定义表结构。
				缺点：查询性能不高，而且缺乏统一的查询语法。
				
			3、列存储数据库
				数据模型：以列簇式存储，将同一列数据存在一起。
				举例：
					-> HBase
					-> Cassandra
				应用场景：分布式的文件系统
				优点：查询速度快，可扩展性强，更容易进行分布式扩展。
				缺点：功能相对局限
				
			4、图关系数据库
				数据模型：图结构<一种网络图数据结构，就是数学中的图论>
				举例：
					-> Neo4J
					-> InfoGrid
				应用场景：社交网络、推荐系统等，专注于构建关系图谱
				优点：利用图结构相关算法。比如最短路径寻址，N度关系查找等
				缺点：很多时候需要对整个图做计算才能得到需要的信息，而且这种结构不太好做分布式的集群方式
	
-------------------------------------------
	学习中文网：http://www.redis.cn/
	下载：官网下载，windows在github上下载，当然也可以将linux版本安装在windows上
	
	
	-> Redis概述
		<Remote Dictionary Server>，远程字典服务
		是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日执行、key-value数据库，并提供多种语言的API。
		
		Redis作用：
			内存存储<将数据缓存到内存中>;
			持久化：将内存中的数据持久化到磁盘中，内存中的数据是断电即失的(持久化的重要性)<RDB、AOF>。
			效率高，可以用于高速缓存。
			发布订阅系统
			地图信息分析
			计时器、计数器(浏览量)

	-> 安装与运行
		windows上：
			安装：
					安装包：https://github.com/dmajkic/redis/releases
				直接解压即可。
			运行：
				开启Redis，双击运行服务<redis-server.exe>即可。
				默认端口：6379
			客户端运行：
				双击<redis-cl.exe>客户端服务。(注意不要关闭服务端)
				测试是否连接到服务端：ping ==> PONG		|		<设置键值对>set name qlj	 |	 <通过key获取value>get name
				
		
		linux上：
			下载安装包：在官网下载。
			












